{"version":3,"file":"static/js/558.08fd447f.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styles.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter.filter;\n// мемоізація\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from '@emotion/styled';\n\nexport const ContactForm = styled.form`\n  background-color: rgba(242, 246, 247, 0.5);\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled.input`\n  border-radius: 20px;\n  text-align: center;\n`;\n\nexport const AddContactBtn = styled.button`\n  padding-left: 10px;\n  padding-right: 10px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { addContact } from '../../redux/contacts/operations';\nimport { selectVisibleContacts } from '../../redux/contacts/selectors';\nimport { AddContactBtn, ContactForm } from './ContactForm.styles';\n\nexport const FormContact = () => {\n  const contacts = useSelector(selectVisibleContacts);\n\n  const dispatch = useDispatch();\n\n  const handleSubmitContact = e => {\n    e.preventDefault();\n    const newContact = {\n      id: nanoid(),\n      name: e.target.elements.name.value,\n      number: e.target.elements.number.value,\n    };\n    const isNameExist = contacts.some(\n      contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n    );\n\n    if (isNameExist) {\n      alert(`${newContact.name} is already in contacts!`);\n    } else {\n      dispatch(addContact(newContact));\n\n      e.target.reset();\n    }\n  };\n\n  return (\n    <div>\n      <ContactForm onSubmit={handleSubmitContact}>\n        <label>\n          Name\n          <input type=\"text\" name=\"name\" required />\n        </label>\n\n        <label>\n          Number\n          <input type=\"tel\" name=\"number\" required />\n        </label>\n\n        <AddContactBtn type=\"submit\">Add contact</AddContactBtn>\n      </ContactForm>\n    </div>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ContactContainer = styled.div`\n  background-color: rgba(242, 246, 247, 0.5);\n  max-width: 400px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 0 auto;\n  padding: 20px;\n  border: 1px solid #ccc;\n  border-radius: 8px;\n  font-size: 20px;\n  margin-bottom: 20px;\n`;\n\nexport const MyContacts = styled.ul`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ContactItem = styled.li`\n  border: 1px solid #ccc;\n  font-size: 18px;\n  border-radius: 5px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 10px;\n`;\n\nexport const ContactText = styled.p`\n  text-transform: capitalize;\n  padding-right: 40px;\n`;\n\nexport const DelContactBtn = styled.button`\n  padding-left: 10px;\n  padding-right: 10px;\n`;\n","import { useEffect } from 'react';\nimport { deleteContact, fetchContacts } from '../../redux/contacts/operations';\nimport { selectVisibleContacts } from '../../redux/contacts/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  ContactContainer,\n  ContactItem,\n  ContactText,\n  DelContactBtn,\n  MyContacts,\n} from './ContactList.styled';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const contacts = useSelector(selectVisibleContacts);\n\n  return (\n    <ContactContainer>\n      <MyContacts>\n        {contacts.map(({ id, name, number }) => (\n          <ContactItem key={id}>\n            <ContactText>\n              {name} : {number}\n            </ContactText>\n            <DelContactBtn\n              type=\"button\"\n              onClick={() => dispatch(deleteContact(id))}\n            >\n              Delete\n            </DelContactBtn>\n          </ContactItem>\n        ))}\n      </MyContacts>\n    </ContactContainer>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const FilterContainer = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 0 auto;\n  padding: 20px;\n  border: 1px solid #ccc;\n  border-radius: 8px;\n  font-size: 20px;\n  max-width: 400px;\n  background-color: rgba(242, 246, 247, 0.5);\n  margin-bottom: 20px;\n`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterContacts } from '../../redux/contacts/filterSlice';\nimport { selectFilter } from '../../redux/contacts/selectors';\nimport { FilterContainer } from './Filter.styled';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n\n  const dispatch = useDispatch();\n\n  const changeFilter = e => {\n    dispatch(filterContacts(e.target.value));\n  };\n\n  return (\n    <FilterContainer>\n      Find contacts by name\n      <input\n        type=\"text\"\n        value={filter}\n        onChange={changeFilter}\n        filter={filter}\n      />\n    </FilterContainer>\n  );\n};\n","import { FormContact } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\n\nconst Contacts = () => {\n  return (\n    <div>\n      <FormContact />\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectFilter","state","filter","selectVisibleContacts","createSelector","contacts","contact","name","toLowerCase","includes","ContactForm","styled","_templateObject","_taggedTemplateLiteral","AddContactBtn","_templateObject2","_templateObject3","FormContact","useSelector","dispatch","useDispatch","_jsx","children","_jsxs","onSubmit","e","preventDefault","newContact","id","nanoid","target","elements","value","number","some","alert","concat","addContact","reset","type","required","ContactContainer","MyContacts","ContactItem","ContactText","_templateObject4","DelContactBtn","_templateObject5","ContactList","useEffect","fetchContacts","map","_ref","onClick","deleteContact","FilterContainer","Filter","onChange","filterContacts"],"sourceRoot":""}