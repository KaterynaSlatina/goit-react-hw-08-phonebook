{"version":3,"file":"static/js/771.f567c0a0.chunk.js","mappings":"oLACA,MAA0B,6BAA1B,EAAqE,iC,wCCIxDA,EAAe,SAAAC,GAAK,OAAIA,EAAMC,OAAOA,MAAO,EAE5CC,GAAwBC,EAAAA,EAAAA,IACnC,CAN4B,SAAAH,GAAK,OAAIA,EAAMI,SAASA,QAAS,EAM5CL,IACjB,SAACK,EAAUH,GACT,OAAOG,EAASH,QAAO,SAAAI,GAAO,OAC5BA,EAAQC,KAAKC,cAAcC,SAASP,EAAOM,cAAc,GAE7D,I,UCPWE,EAAc,WACzB,IAAML,GAAWM,EAAAA,EAAAA,IAAYR,GAEvBS,GAAWC,EAAAA,EAAAA,MAsBjB,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAgBC,UAC9BC,EAAAA,EAAAA,MAAA,QAAMC,SAtBkB,SAAAC,GAC1BA,EAAEC,iBACF,IAAMC,EAAa,CACjBC,IAAIC,EAAAA,EAAAA,MACJjB,KAAMa,EAAEK,OAAOC,SAASnB,KAAKoB,MAC7BC,OAAQR,EAAEK,OAAOC,SAASE,OAAOD,OAEftB,EAASwB,MAC3B,SAAAvB,GAAO,OAAIA,EAAQC,KAAKC,gBAAkBc,EAAWf,KAAKC,aAAa,IAIvEsB,MAAM,GAADC,OAAIT,EAAWf,KAAI,8BAExBK,GAASoB,EAAAA,EAAAA,IAAWV,IAEpBF,EAAEK,OAAOQ,QAEb,EAIwChB,SAAA,EAClCC,EAAAA,EAAAA,MAAA,SAAAD,SAAA,CAAO,QAELH,EAAAA,EAAAA,KAAA,SAAOoB,KAAK,OAAO3B,KAAK,OAAO4B,UAAQ,QAGzCjB,EAAAA,EAAAA,MAAA,SAAAD,SAAA,CAAO,UAELH,EAAAA,EAAAA,KAAA,SAAOoB,KAAK,MAAM3B,KAAK,SAAS4B,UAAQ,QAG1CrB,EAAAA,EAAAA,KAAA,UAAQC,UAAWC,EAAakB,KAAK,SAAQjB,SAAC,oBAMtD,E,UCjDA,EAA0B,6BAA1B,EAAqE,iCAArE,EAAmH,gCAAnH,EAAkK,kCCSrJmB,EAAc,WACzB,IAAMxB,GAAWC,EAAAA,EAAAA,OAEjBwB,EAAAA,EAAAA,YAAU,WACRzB,GAAS0B,EAAAA,EAAAA,MACX,GAAG,CAAC1B,IAGJ,IAAMP,GAAWM,EAAAA,EAAAA,IAAYR,GAc7B,OACEW,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAYC,UAC1BH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAgBC,SAC5BZ,EAASkC,KAAI,SAAAC,GAAA,IAAGjB,EAAEiB,EAAFjB,GAAIhB,EAAIiC,EAAJjC,KAAMqB,EAAMY,EAANZ,OAAM,OAC/BV,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEC,EAAAA,EAAAA,MAAA,KAAGH,UAAWC,EAAiBC,SAAA,CAC5BV,EAAK,MAAIqB,MAEZd,EAAAA,EAAAA,KAAA,UACEC,UAAWC,EACXkB,KAAK,SACLO,QAAS,kBAAM7B,GAAS8B,EAAAA,EAAAA,IAAcnB,GAAI,EAACN,SAC5C,aARMM,EAWJ,OAKf,ECnDA,EAA8B,4BAA9B,EAAwE,4B,UCK3DoB,EAAS,WACpB,IAAMzC,GAASS,EAAAA,EAAAA,IAAYX,GAErBY,GAAWC,EAAAA,EAAAA,MAMjB,OACEK,EAAAA,EAAAA,MAAA,SAAOH,UAAWC,EAAgBC,SAAA,CAAC,yBAEjCH,EAAAA,EAAAA,KAAA,SACEC,UAAWC,EACXkB,KAAK,OACLP,MAAOzB,EACP0C,SAXe,SAAAxB,GACnBR,GAASiC,EAAAA,EAAAA,GAAezB,EAAEK,OAAOE,OACnC,EAUMzB,OAAQA,MAIhB,ECbA,EAViB,WACf,OACEgB,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEH,EAAAA,EAAAA,KAACJ,EAAW,KACZI,EAAAA,EAAAA,KAACsB,EAAW,KACZtB,EAAAA,EAAAA,KAAC6B,EAAM,MAGb,C","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btnForm\":\"ContactForm_btnForm__cx8-v\",\"formContact\":\"ContactForm_formContact__CkY07\"};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter.filter;\n// мемоізація\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { addContact } from '../../redux/contacts/operations';\nimport { selectVisibleContacts } from '../../redux/contacts/selectors';\n\nexport const FormContact = () => {\n  const contacts = useSelector(selectVisibleContacts);\n\n  const dispatch = useDispatch();\n\n  const handleSubmitContact = e => {\n    e.preventDefault();\n    const newContact = {\n      id: nanoid(),\n      name: e.target.elements.name.value,\n      number: e.target.elements.number.value,\n    };\n    const isNameExist = contacts.some(\n      contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n    );\n\n    if (isNameExist) {\n      alert(`${newContact.name} is already in contacts!`);\n    } else {\n      dispatch(addContact(newContact));\n\n      e.target.reset();\n    }\n  };\n\n  return (\n    <div className={css.formContact}>\n      <form onSubmit={handleSubmitContact}>\n        <label>\n          Name\n          <input type=\"text\" name=\"name\" required />\n        </label>\n\n        <label>\n          Number\n          <input type=\"tel\" name=\"number\" required />\n        </label>\n\n        <button className={css.btnForm} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contact\":\"ContactList_contact__0STHS\",\"contactList\":\"ContactList_contactList__UFVCg\",\"contactBtn\":\"ContactList_contactBtn__We0dD\",\"contactNames\":\"ContactList_contactNames__vzz8t\"};","import { useEffect } from 'react';\nimport { deleteContact, fetchContacts } from '../../redux/contacts/operations';\nimport {\n  // selectContacts,\n  // selectFilter,\n  selectVisibleContacts,\n} from '../../redux/contacts/selectors';\nimport css from './ContactList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  // const contacts = useSelector(selectContacts);\n  const contacts = useSelector(selectVisibleContacts);\n\n  // const filter = useSelector(selectFilter);\n\n  // const findContacts = Array.isArray(contacts)\n  //   ? contacts.filter(contact =>\n  //       contact.name.toLowerCase().includes(filter.toLowerCase())\n  //     )\n  //   : [];\n\n  // const deleteContact = id => {\n  //   dispatch(deleteContact(id));\n  // };\n\n  return (\n    <div className={css.contact}>\n      <ul className={css.contactList}>\n        {contacts.map(({ id, name, number }) => (\n          <li key={id}>\n            <p className={css.contactNames}>\n              {name} : {number}\n            </p>\n            <button\n              className={css.contactBtn}\n              type=\"button\"\n              onClick={() => dispatch(deleteContact(id))}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filterLabel\":\"Filter_filterLabel__+pnW-\",\"filterInput\":\"Filter_filterInput__1Cysk\"};","import React from 'react';\nimport css from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterContacts } from '../../redux/contacts/filterSlice';\nimport { selectFilter } from '../../redux/contacts/selectors';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n\n  const dispatch = useDispatch();\n\n  const changeFilter = e => {\n    dispatch(filterContacts(e.target.value));\n  };\n\n  return (\n    <label className={css.filterLabel}>\n      Find contacts by name\n      <input\n        className={css.filterInput}\n        type=\"text\"\n        value={filter}\n        onChange={changeFilter}\n        filter={filter}\n      />\n    </label>\n  );\n};\n","import { FormContact } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\n\nconst Contacts = () => {\n  return (\n    <div>\n      <FormContact />\n      <ContactList />\n      <Filter />\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectFilter","state","filter","selectVisibleContacts","createSelector","contacts","contact","name","toLowerCase","includes","FormContact","useSelector","dispatch","useDispatch","_jsx","className","css","children","_jsxs","onSubmit","e","preventDefault","newContact","id","nanoid","target","elements","value","number","some","alert","concat","addContact","reset","type","required","ContactList","useEffect","fetchContacts","map","_ref","onClick","deleteContact","Filter","onChange","filterContacts"],"sourceRoot":""}